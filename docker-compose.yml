version: '3.7'

services:
  micro-services:
    container_name: micro-services
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - 3000:3000
    command: npm run start:debug
    env_file:
      - .env
    networks:
      - nestjs-service-starter
    depends_on:
      - redis
      - postgres
      - mysql
  mysql:
    image: mysql:latest
    container_name: mysql-db
    volumes:
      - mysql-data:/var/lib/mysql
      # - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - nestjs-service-starter
    environment:
      # MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
  redis:
    container_name: redis
    image: redis:latest
    networks:
      - nestjs-service-starter
  postgres:
    container_name: postgres
    image: postgres:latest
    networks:
      - nestjs-service-starter
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data    
networks:
  nestjs-service-starter:
volumes:
  mysql-data:
  postgres-data: